{"ast":null,"code":"var _jsxFileName = \"/Users/blake/vscode-workspace/yona-plus/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [user]);\n  const login = userData => {\n    setUser(userData);\n  };\n  const logout = async () => {\n    try {\n      await api.post('/users/logout');\n      setUser(null);\n      localStorage.removeItem('user'); // 로컬 스토리지에서 사용자 정보 제거\n    } catch (error) {\n      console.error('Logout failed:', error);\n      throw error; // 에러를 상위로 전파하여 호출하는 쪽에서 처리할 수 있게 함\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"hndlzAN7pnaz2Y5XYZXFsWZoxPQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","savedUser","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","login","userData","logout","post","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/blake/vscode-workspace/yona-plus/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode, useEffect } from 'react';\nimport api from '../utils/api';\n\ninterface User {\n  id: number;\n  loginId: string;\n  name: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (userData: User) => void;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(() => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [user]);\n\n  const login = (userData: User) => {\n    setUser(userData);\n  };\n\n  const logout = async () => {\n    try {\n      await api.post('/users/logout');\n      setUser(null);\n      localStorage.removeItem('user'); // 로컬 스토리지에서 사용자 정보 제거\n    } catch (error) {\n      console.error('Logout failed:', error);\n      throw error; // 에러를 상위로 전파하여 호출하는 쪽에서 처리할 수 있게 함\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAaC,SAAS,QAAQ,OAAO;AACxF,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc/B,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAc,MAAM;IAClD,MAAMa,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,EAAE;MACRG,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;IACpD,CAAC,MAAM;MACLG,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IACjC;EACF,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,MAAMU,KAAK,GAAIC,QAAc,IAAK;IAChCV,OAAO,CAACU,QAAQ,CAAC;EACnB,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMpB,GAAG,CAACqB,IAAI,CAAC,eAAe,CAAC;MAC/BZ,OAAO,CAAC,IAAI,CAAC;MACbE,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEU,KAAK;MAAEE;IAAO,CAAE;IAAAd,QAAA,EAClDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CAlCWF,YAA+C;AAAAyB,EAAA,GAA/CzB,YAA+C;AAoC5D,OAAO,MAAM0B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGnC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI8B,OAAO,KAAK7B,SAAS,EAAE;IACzB,MAAM,IAAI8B,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}