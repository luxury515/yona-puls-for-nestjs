{"ast":null,"code":"var _jsxFileName = \"/Users/blake/vscode-workspace/yona-plus/frontend/src/components/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport api from '../utils/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    loginId: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/users/login', formData);\n      console.log('Login response:', response.data);\n      if (response.data && response.data.user) {\n        login(response.data.user);\n        toast.success('로그인에 성공했습니다!');\n        navigate('/');\n      } else {\n        console.error('로그인 응답에 사용자 정보가 없습니다.');\n        toast.error('로그인 응답에 사용자 정보가 없습니다.');\n      }\n    } catch (error) {\n      console.error('로그인 실패:', error);\n      toast.error('로그인에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"max-w-md mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"loginId\",\n      value: formData.loginId,\n      onChange: handleChange,\n      placeholder: \"\\uB85C\\uADF8\\uC778 ID\",\n      className: \"w-full px-3 py-2 mb-3 border rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      className: \"w-full px-3 py-2 mb-3 border rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full px-3 py-2 text-white bg-blue-500 rounded hover:bg-blue-600\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Z87hSU+X+n03cSw4OZMVTTNjFCA=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","api","toast","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","loginId","password","navigate","login","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","response","post","console","log","data","user","success","error","onSubmit","className","children","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/blake/vscode-workspace/yona-plus/frontend/src/components/Login.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport api from '../utils/api';\nimport { toast } from 'react-toastify';\n\ninterface LoginFormData {\n  loginId: string;\n  password: string;\n}\n\nconst Login: React.FC = () => {\n  const [formData, setFormData] = useState<LoginFormData>({\n    loginId: '',\n    password: '',\n  });\n  const navigate = useNavigate();\n  const { login } = useAuth();\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/users/login', formData);\n      console.log('Login response:', response.data);\n      if (response.data && response.data.user) {\n        login(response.data.user);\n        toast.success('로그인에 성공했습니다!');\n        navigate('/');\n      } else {\n        console.error('로그인 응답에 사용자 정보가 없습니다.');\n        toast.error('로그인 응답에 사용자 정보가 없습니다.');\n      }\n    } catch (error) {\n      console.error('로그인 실패:', error);\n      toast.error('로그인에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"max-w-md mx-auto mt-8\">\n      <input\n        type=\"text\"\n        name=\"loginId\"\n        value={formData.loginId}\n        onChange={handleChange}\n        placeholder=\"로그인 ID\"\n        className=\"w-full px-3 py-2 mb-3 border rounded\"\n        required\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={handleChange}\n        placeholder=\"비밀번호\"\n        className=\"w-full px-3 py-2 mb-3 border rounded\"\n        required\n      />\n      <button type=\"submit\" className=\"w-full px-3 py-2 text-white bg-blue-500 rounded hover:bg-blue-600\">\n        로그인\n      </button>\n    </form>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}