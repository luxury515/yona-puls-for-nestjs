{"ast":null,"code":"var _jsxFileName = \"/Users/blake/vscode-workspace/yona-plus/frontend/src/components/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    loginId: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:6000/users/login', formData, {\n        withCredentials: true\n      });\n      console.log('로그인 성공:', response.data);\n      login(response.data.user);\n      toast.success('로그인 성공!');\n      navigate('/'); // 로그인 성공 시 대시보드(홈)로 이동\n    } catch (error) {\n      console.error('로그인 실패:', error);\n      toast.error('로그인 실패. 다시 시도해주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"max-w-md mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"loginId\",\n      value: formData.loginId,\n      onChange: handleChange,\n      placeholder: \"\\uB85C\\uADF8\\uC778 ID\",\n      className: \"w-full px-3 py-2 mb-3 border rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      className: \"w-full px-3 py-2 mb-3 border rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full px-3 py-2 text-white bg-blue-500 rounded hover:bg-blue-600\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Z87hSU+X+n03cSw4OZMVTTNjFCA=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","toast","axios","useAuth","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","loginId","password","navigate","login","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","response","post","withCredentials","console","log","data","user","success","error","onSubmit","className","children","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/blake/vscode-workspace/yona-plus/frontend/src/components/Login.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\n\ninterface LoginFormData {\n  loginId: string;\n  password: string;\n}\n\nconst Login: React.FC = () => {\n  const [formData, setFormData] = useState<LoginFormData>({\n    loginId: '',\n    password: '',\n  });\n  const navigate = useNavigate();\n  const { login } = useAuth();\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:6000/users/login', formData, {\n        withCredentials: true\n      });\n      console.log('로그인 성공:', response.data);\n      login(response.data.user);\n      toast.success('로그인 성공!');\n      navigate('/'); // 로그인 성공 시 대시보드(홈)로 이동\n    } catch (error) {\n      console.error('로그인 실패:', error);\n      toast.error('로그인 실패. 다시 시도해주세요.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"max-w-md mx-auto mt-8\">\n      <input\n        type=\"text\"\n        name=\"loginId\"\n        value={formData.loginId}\n        onChange={handleChange}\n        placeholder=\"로그인 ID\"\n        className=\"w-full px-3 py-2 mb-3 border rounded\"\n        required\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={handleChange}\n        placeholder=\"비밀번호\"\n        className=\"w-full px-3 py-2 mb-3 border rounded\"\n        required\n      />\n      <button type=\"submit\" className=\"w-full px-3 py-2 text-white bg-blue-500 rounded hover:bg-blue-600\">\n        로그인\n      </button>\n    </form>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}